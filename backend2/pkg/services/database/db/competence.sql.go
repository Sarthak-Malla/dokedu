// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: competence.sql

package db

import (
	"context"
)

const competenceFindById = `-- name: CompetenceFindById :one
SELECT id, name, competence_id, competence_type, organisation_id, grades, color, curriculum_id, created_at, deleted_at, sort_order, created_by
FROM competences
WHERE id = $1
  AND organisation_id = $2
  AND deleted_at IS NULL
`

type CompetenceFindByIdParams struct {
	ID             string `db:"id"`
	OrganisationID string `db:"organisation_id"`
}

func (q *Queries) CompetenceFindById(ctx context.Context, arg CompetenceFindByIdParams) (Competence, error) {
	row := q.db.QueryRow(ctx, competenceFindById, arg.ID, arg.OrganisationID)
	var i Competence
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.CompetenceID,
		&i.CompetenceType,
		&i.OrganisationID,
		&i.Grades,
		&i.Color,
		&i.CurriculumID,
		&i.CreatedAt,
		&i.DeletedAt,
		&i.SortOrder,
		&i.CreatedBy,
	)
	return i, err
}
