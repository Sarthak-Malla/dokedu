// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: entry_file.sql

package db

import (
	"context"
)

const getEntryFiles = `-- name: GetEntryFiles :many
SELECT id, entry_id, file_id, created_at, deleted_at, organisation_id
FROM entry_files
WHERE organisation_id = $1 AND entry_id = $2
`

type GetEntryFilesParams struct {
	OrganisationID string `json:"organisation_id"`
	EntryID        string `json:"entry_id"`
}

func (q *Queries) GetEntryFiles(ctx context.Context, arg GetEntryFilesParams) ([]EntryFile, error) {
	rows, err := q.db.QueryContext(ctx, getEntryFiles, arg.OrganisationID, arg.EntryID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []EntryFile
	for rows.Next() {
		var i EntryFile
		if err := rows.Scan(
			&i.ID,
			&i.EntryID,
			&i.FileID,
			&i.CreatedAt,
			&i.DeletedAt,
			&i.OrganisationID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
